#+TITLE: Proposal Questions
#+AUTHOR: Hesam Shams
#+EMAIL: 
#+DATE: \today
#+OPTIONS:   H:5 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+LATEX_CLASS: article
#+EXCLUDE_TAGS: NOEXPORT

* Latex Headers                                                    :NOEXPORT:
#+LATEX_HEADER: \usepackage[margin=1in]{geometry}
#+LATEX_HEADER: \usepackage[onehalfspacing]{setspace}
#+LATEX_HEADER: \usepackage{graphicx}
#+LATEX_HEADER: \usepackage[tight,hang,nooneline,raggedright,figtopcap]{subfigure}
#+LATEX_HEADER: \usepackage{color}
#+LATEX_HEADER: \usepackage{multirow}
#+LATEX_HEADER: \usepackage{multicol}
#+LATEX_HEADER: \usepackage{amsfonts}
#+LATEX_HEADER: \usepackage{hyperref}
#+LATEX_HEADER: \usepackage{amsmath,amssymb}
#+LATEX_HEADER: \usepackage[english]{babel}
#+LATEX_HEADER: \usepackage{multimedia}
#+LATEX_HEADER: \usepackage[boxed]{algorithm}
#+LATEX_HEADER: \usepackage{algorithmic}
#+LATEX_HEADER: \usepackage{natbib}
#+LATEX_HEADER: \usepackage{listings}
#+LATEX_HEADER: \usepackage{minted}

* Emacs Headers                                                    :NOEXPORT:
#+BEGIN_SRC emacs-lisp
  (require 'ox-latex)
  (setq org-latex-listings t)
  (setq org-latex-prefer-user-labels t)
  (add-to-list 'org-latex-packages-alist '("" "listings"))
  (add-to-list 'org-latex-packages-alist '("" "color"))

  (defun remove-orgmode-latex-labels1(text backend info)
     "Remove labels generated by org-mode"
     (replace-regexp-in-string 
        "\\\\label{sec:org\.*}" "" text)    
   )

   (defun remove-orgmode-latex-labels2(text backend info)
     "Remove labels generated by org-mode"
     (replace-regexp-in-string 
        "\\\\\(" "$" text)     
   )

   (defun remove-orgmode-latex-labels3(text backend info)
     (replace-regexp-in-string 
       "\\\\\)" "$" text)   
   )

  (add-hook 'org-export-latex-final-hook 'remove-orgmode-latex-labels)
   (add-to-list 'org-export-filter-final-output-functions
                    'remove-orgmode-latex-labels1)
   (add-to-list 'org-export-filter-final-output-functions
                    'remove-orgmode-latex-labels2)
   (add-to-list 'org-export-filter-final-output-functions
                    'remove-orgmode-latex-labels3)
#+END_SRC

#+RESULTS:
| remove-orgmode-latex-labels3 | remove-orgmode-latex-labels2 | remove-orgmode-latex-labels1 |

#+BEGIN_SRC emacs-lisp
(setq org-latex-pdf-process  '("xelatex -shell-escape -interaction nonstopmode -output-directory %o %f"
        "bibtex %b"
        "xelatex -shell-escape -interaction nonstopmode -output-directory %o %f"
        "xelatex -shell-escape -interaction nonstopmode -output-directory %o %f"))
#+END_SRC

#+RESULTS:
| xelatex -shell-escape -interaction nonstopmode -output-directory %o %f | bibtex %b | xelatex -shell-escape -interaction nonstopmode -output-directory %o %f | xelatex -shell-escape -interaction nonstopmode -output-directory %o %f |

- set the size of the formulas when displayed inline in org
#+BEGIN_SRC emacs-lisp
(setq org-format-latex-options (plist-put org-format-latex-options :scale 3.0))
#+end_src

#+RESULTS:
| :foreground | default | :background | default | :scale | 3.0 | :html-foreground | Black | :html-background | Transparent | :html-scale | 1.0 | :matchers | (begin $1 $ $$ \( \[) |

#+BEGIN_SRC emacs-lisp
(add-hook 'python-mode-hook 'guess-style-guess-tabs-mode)
   (add-hook 'python-mode-hook (lambda ()
                                    (guess-style-guess-tab-width)))
#+END_SRC

#+RESULTS:
| (lambda nil (guess-style-guess-tab-width)) | guess-style-guess-tabs-mode | wisent-python-default-setup |

- display inline images in org

#+BEGIN_SRC emacs-lisp
(setq org-startup-with-inline-images t)
(setq org-image-actual-width nil)
(org-redisplay-inline-images)
#+END_SRC

#+RESULTS:
: No images to display inline

- export code blocks
#+BEGIN_SRC emacs-lisp
(add-to-list 'org-latex-packages-alist '("" "minted")) (setq org-latex-listings 'minted)
#+END_SRC

#+RESULTS:
: minted
